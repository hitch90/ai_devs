var t={isNone:function(){return!0},orElse:function(t){return t},orCall:function(t){return t()},orNull:function(){return null},orThrow:function(t){throw void 0===t&&(t="Unexpected null value"),new TypeError(t)},map:function(){return t},get:function(){return t}},e=function(){function t(t){this.value=t}return t.prototype.isNone=function(){return!1},t.prototype.orElse=function(){return this.value},t.prototype.orCall=function(){return this.value},t.prototype.orNull=function(){return this.value},t.prototype.orThrow=function(){return this.value},t.prototype.map=function(t){return o(t(this.value))},t.prototype.get=function(t){return this.map((function(e){return e[t]}))},t}();function o(o){return function(o){return o===t||o instanceof e}(o)?o:null==o?t:function(t){if(null==t)throw new TypeError("some() does not accept null or undefined");return new e(t)}(o)}class n extends Error{constructor(t){super(t.statusText),Object.setPrototypeOf(this,new.target.prototype),this.headers=t.headers,this.url=t.url,this.status=t.status,this.statusText=t.statusText,this.data=t.data}}const a=t=>"post"===t||"put"===t||"patch"===t||"delete"===t;function r(t,e,o){let n={};return a(t)?o.forEach((t=>{n[t]=e[t],delete e[t]})):n={...e},function(t){const e=[],o=(t,e)=>`${encodeURIComponent(t)}=${encodeURIComponent(String(e))}`;return Object.keys(t).forEach((n=>{const a=t[n];null!=a&&(Array.isArray(a)?a.forEach((t=>e.push(o(n,t)))):e.push(o(n,a)))})),e.length>0?`?${e.join("&")}`:""}(n)}function s(t,e){const o=new Headers(null==t?void 0:t.headers),n=new Headers(null==e?void 0:e.headers);for(const t of n.keys()){const e=n.get(t);null!=e&&o.set(t,e)}return{...t,...e,headers:o}}function i(t){var e,o;const n=Object.assign(Array.isArray(t.payload)?[]:{},t.payload),s=function(t,e){return t.replace(/\{([^}]+)\}/g,((t,o)=>{const n=encodeURIComponent(e[o]);return delete e[o],n}))}(t.path,n),i=r(t.method,n,t.queryParams),c=function(t,e){if(!a(t))return;const o=e instanceof FormData?e:JSON.stringify(e);return"delete"===t&&"{}"===o?void 0:o}(t.method,n),l=a(t.method)?function(t,e){const o=new Headers(e);return void 0===t||t instanceof FormData||o.has("Content-Type")||o.append("Content-Type","application/json"),o.has("Accept")||o.append("Accept","application/json"),o}(c,null===(e=t.init)||void 0===e?void 0:e.headers):new Headers(null===(o=t.init)||void 0===o?void 0:o.headers);return{url:t.baseUrl+s+i,init:{...t.init,method:t.method.toUpperCase(),headers:l,body:c}}}async function c(t,e){const o=await fetch(t,e),a=await async function(t){const e=t.headers.get("content-type");if(204===t.status)return;if(e&&-1!==e.indexOf("application/json"))return await t.json();const o=await t.text();try{return JSON.parse(o)}catch(t){return o}}(o),r={headers:o.headers,url:o.url,ok:o.ok,status:o.status,statusText:o.statusText,data:a};if(r.ok)return r;throw new n(r)}function l(){let t="",e={};const o=[],a=function(t,e){const o=async(n,a,r)=>{if(null==t||n===t.length)return e(a,r);const s=t[n];return await s(a,r,((t,e)=>o(n+1,t,e)))};return(t,e)=>o(0,t,e)}(o,c);return{configure:n=>{t=n.baseUrl||"",e=n.init||{},o.splice(0),o.push(...n.use||[])},use:t=>o.push(t),path:o=>({method:r=>({create:c=>function(t){const e=async(o,a)=>{try{return await t(o,a)}catch(t){if(t instanceof n)throw new e.Error(t);throw t}};return e.Error=class extends n{constructor(t){super(t),Object.setPrototypeOf(this,new.target.prototype)}getActualType(){return{status:this.status,data:this.data}}},e}(((n,l)=>async function(t){const{url:e,init:o}=i(t);return await t.fetch(e,o)}({baseUrl:t||"",path:o,method:r,queryParams:Object.keys(c||{}),payload:n,init:s(e,l),fetch:a})))})})}}const p={for:()=>l()};function h(t){return{clusterStatus:t.path("/cluster").method("get").create(),collectionClusterInfo:t.path("/collections/{collection_name}/cluster").method("get").create(),recoverCurrentPeer:t.path("/cluster/recover").method("post").create(),removePeer:t.path("/cluster/peer/{peer_id}").method("delete").create({force:!0}),updateCollectionCluster:t.path("/collections/{collection_name}/cluster").method("post").create({timeout:!0})}}function d(t){return{collectionClusterInfo:t.path("/collections/{collection_name}/cluster").method("get").create(),createCollection:t.path("/collections/{collection_name}").method("put").create({timeout:!0}),createFieldIndex:t.path("/collections/{collection_name}/index").method("put").create({ordering:!0,wait:!0}),createSnapshot:t.path("/collections/{collection_name}/snapshots").method("post").create({wait:!0}),deleteCollection:t.path("/collections/{collection_name}").method("delete").create({timeout:!0}),deleteFieldIndex:t.path("/collections/{collection_name}/index/{field_name}").method("delete").create({ordering:!0,wait:!0}),deleteSnapshots:t.path("/collections/{collection_name}/snapshots/{snapshot_name}").method("delete").create({wait:!0}),getCollection:t.path("/collections/{collection_name}").method("get").create(),getCollectionAliases:t.path("/collections/{collection_name}/aliases").method("get").create(),getCollections:t.path("/collections").method("get").create(),getCollectionsAliases:t.path("/aliases").method("get").create(),getSnapshot:t.path("/collections/{collection_name}/snapshots/{snapshot_name}").method("get").create(),listSnapshots:t.path("/collections/{collection_name}/snapshots").method("get").create(),recoverFromSnapshot:t.path("/collections/{collection_name}/snapshots/recover").method("put").create({wait:!0}),updateAliases:t.path("/collections/aliases").method("post").create({timeout:!0}),updateCollection:t.path("/collections/{collection_name}").method("patch").create({timeout:!0}),updateCollectionCluster:t.path("/collections/{collection_name}/cluster").method("post").create({timeout:!0})}}function u(t){return{clearPayload:t.path("/collections/{collection_name}/points/payload/clear").method("post").create({ordering:!0,wait:!0}),countPoints:t.path("/collections/{collection_name}/points/count").method("post").create(),deletePayload:t.path("/collections/{collection_name}/points/payload/delete").method("post").create({wait:!0,ordering:!0}),deletePoints:t.path("/collections/{collection_name}/points/delete").method("post").create({wait:!0,ordering:!0}),updateVectors:t.path("/collections/{collection_name}/points/vectors").method("put").create({wait:!0,ordering:!0}),deleteVectors:t.path("/collections/{collection_name}/points/vectors/delete").method("post").create({wait:!0,ordering:!0}),getPoint:t.path("/collections/{collection_name}/points/{id}").method("get").create(),getPoints:t.path("/collections/{collection_name}/points").method("post").create({consistency:!0}),overwritePayload:t.path("/collections/{collection_name}/points/payload").method("put").create({wait:!0,ordering:!0}),recommendBatchPoints:t.path("/collections/{collection_name}/points/recommend/batch").method("post").create({consistency:!0}),recommendPoints:t.path("/collections/{collection_name}/points/recommend").method("post").create({consistency:!0}),searchPointGroups:t.path("/collections/{collection_name}/points/search/groups").method("post").create({consistency:!0}),scrollPoints:t.path("/collections/{collection_name}/points/scroll").method("post").create({consistency:!0}),searchBatchPoints:t.path("/collections/{collection_name}/points/search/batch").method("post").create({consistency:!0}),searchPoints:t.path("/collections/{collection_name}/points/search").method("post").create({consistency:!0}),setPayload:t.path("/collections/{collection_name}/points/payload").method("post").create({wait:!0,ordering:!0}),upsertPoints:t.path("/collections/{collection_name}/points").method("put").create({wait:!0,ordering:!0}),recommendPointGroups:t.path("/collections/{collection_name}/points/recommend/groups").method("post").create({consistency:!0}),batchUpdate:t.path("/collections/{collection_name}/points/batch").method("post").create({wait:!0,ordering:!0})}}function m(t){return{getLocks:t.path("/locks").method("get").create(),metrics:t.path("/metrics").method("get").create(),postLocks:t.path("/locks").method("post").create(),telemetry:t.path("/telemetry").method("get").create(),healthz:t.path("/healthz").method("get").create(),livez:t.path("/livez").method("get").create(),readyz:t.path("/readyz").method("get").create()}}function _(t){return{createFullSnapshot:t.path("/snapshots").method("post").create({wait:!0}),createSnapshot:t.path("/collections/{collection_name}/snapshots").method("post").create({wait:!0}),deleteFullSnapshot:t.path("/snapshots/{snapshot_name}").method("delete").create({wait:!0}),deleteSnapshot:t.path("/collections/{collection_name}/snapshots/{snapshot_name}").method("delete").create({wait:!0}),getFullSnapshot:t.path("/snapshots/{snapshot_name}").method("get").create(),getSnapshot:t.path("/collections/{collection_name}/snapshots/{snapshot_name}").method("get").create(),listFullSnapshots:t.path("/snapshots").method("get").create(),listSnapshots:t.path("/collections/{collection_name}/snapshots").method("get").create(),recoverFromSnapshot:t.path("/collections/{collection_name}/snapshots/recover").method("put").create({wait:!0}),recoverShardFromUploadedSnapshot:t.path("/collections/{collection_name}/shards/{shard_id}/snapshots/upload").method("post").create({wait:!0,priority:!0}),recoverShardFromSnapshot:t.path("/collections/{collection_name}/shards/{shard_id}/snapshots/recover").method("put").create({wait:!0}),listShardSnapshots:t.path("/collections/{collection_name}/shards/{shard_id}/snapshots").method("get").create(),createShardSnapshot:t.path("/collections/{collection_name}/shards/{shard_id}/snapshots").method("post").create({wait:!0}),getShardSnapshot:t.path("/collections/{collection_name}/shards/{shard_id}/snapshots/{snapshot_name}").method("get").create(),deleteShardSnapshot:t.path("/collections/{collection_name}/shards/{shard_id}/snapshots/{snapshot_name}").method("delete").create({wait:!0})}}class w extends Error{constructor(t){super(t),this.name=this.constructor.name,Object.setPrototypeOf(this,new.target.prototype)}}class y extends w{static forResponse(t){const e=`${`${t.status}`} ${t.statusText?`(${t.statusText})`:"(Unrecognized Status Code)"}`.trim(),o=t.data?JSON.stringify(t.data,null,2):null;let n="";o&&(n=o.length<=200?o:o.slice(0,-4)+" ...");return new y(`Unexpected Response: ${e}\n${`Raw response content:\n${n}`}`)}}class f extends w{}class g extends w{}function C(t,e){const o=function(t,{headers:e,timeout:o,connections:n}){const a=[];Number.isFinite(o)&&a.push((async(t,e,n)=>{const a=new AbortController,r=setTimeout((()=>a.abort()),o);try{return await n(t,Object.assign(e,{signal:a.signal}))}catch(t){if(t instanceof Error&&"AbortError"===t.name)throw new g(t.message);throw t}finally{clearTimeout(r)}}));a.push((async(t,e,o)=>{const n=await o(t,e);if(200===n.status||201===n.status)return n;throw y.forResponse(n)}));const r=p.for();return r.configure({baseUrl:t,init:{headers:e,dispatcher:void 0},use:a}),r}(t,e);return{cluster:h(o),collections:d(o),points:u(o),service:m(o),snapshots:_(o)}}class v{constructor({url:t,host:e,apiKey:o,https:n,prefix:a,port:r=6333,timeout:s=3e5,...i}={}){if(this._https=n??"string"==typeof o,this._scheme=this._https?"https":"http",this._prefix=a??"",this._prefix.length>0&&!this._prefix.startsWith("/")&&(this._prefix=`/${this._prefix}`),t&&e)throw new f(`Only one of \`url\`, \`host\` params can be set. Url is ${t}, host is ${e}`);if(e&&(e.startsWith("http://")||e.startsWith("https://")||/:\d+$/.test(e)))throw new f("The `host` param is not expected to contain neither protocol (http:// or https://) nor port (:6333).\nTry to use the `url` parameter instead.");if(t){if(!t.startsWith("http://")&&!t.startsWith("https://"))throw new f("The `url` param expected to contain a valid URL starting with a protocol (http:// or https://).");const e=new URL(t);if(this._host=e.hostname,this._port=e.port?Number(e.port):r,this._scheme=e.protocol.replace(":",""),this._prefix.length>0&&"/"!==e.pathname)throw new f(`Prefix can be set either in \`url\` or in \`prefix\`.\nurl is ${t}, prefix is ${e.pathname}`)}else this._port=r,this._host=e??"127.0.0.1";const c=new Headers([["user-agent","qdrant-js"]]),l=i.headers??{};Object.keys(l).forEach((t=>{l[t]&&c.set(t,String(l[t]))})),"string"==typeof o&&("http"===this._scheme&&console.warn("Api key is used with unsecure connection."),c.set("api-key",o));const p=this._port?`${this._host}:${this._port}`:this._host;this._restUri=`${this._scheme}://${p}${this._prefix}`;const h=i.maxConnections,d={headers:c,timeout:s,connections:h};this._openApiClient=C(this._restUri,d)}api(t){return this._openApiClient[t]}async searchBatch(t,{searches:e,consistency:n}){return o((await this._openApiClient.points.searchBatchPoints({collection_name:t,consistency:n,searches:e})).data.result).orThrow("Search batch returned empty")}async search(t,{vector:e,limit:n=10,offset:a=0,filter:r,params:s,with_payload:i=!0,with_vector:c=!1,score_threshold:l,consistency:p}){return o((await this._openApiClient.points.searchPoints({collection_name:t,consistency:p,vector:e,limit:n,offset:a,filter:r,params:s,with_payload:i,with_vector:c,score_threshold:l})).data.result).orThrow("Search returned empty")}async recommend_batch(t,{searches:e,consistency:n}){return o((await this._openApiClient.points.recommendBatchPoints({collection_name:t,searches:e,consistency:n})).data.result).orElse([])}async recommend(t,{positive:e,negative:n,strategy:a,filter:r,params:s,limit:i=10,offset:c=0,with_payload:l=!0,with_vector:p=!1,score_threshold:h,using:d,lookup_from:u,consistency:m}){return o((await this._openApiClient.points.recommendPoints({collection_name:t,limit:i,positive:e,negative:n,strategy:a,filter:r,params:s,offset:c,with_payload:l,with_vector:p,score_threshold:h,using:d,lookup_from:u,consistency:m})).data.result).orThrow("Recommend points API returned empty")}async scroll(t,{filter:e,consistency:n,limit:a=10,offset:r,with_payload:s=!0,with_vector:i=!1}={}){return o((await this._openApiClient.points.scrollPoints({collection_name:t,limit:a,offset:r,filter:e,with_payload:s,with_vector:i,consistency:n})).data.result).orThrow("Scroll points API returned empty")}async count(t,{filter:e,exact:n=!0}={}){return o((await this._openApiClient.points.countPoints({collection_name:t,filter:e,exact:n})).data.result).orThrow("Count points returned empty")}async collectionClusterInfo(t){return o((await this._openApiClient.collections.collectionClusterInfo({collection_name:t})).data.result).orThrow("Collection cluster info returned empty")}async updateVectors(t,{wait:e=!0,ordering:n,points:a}){return o((await this._openApiClient.points.updateVectors({collection_name:t,wait:e,ordering:n,points:a})).data.result).orThrow("Update vectors returned empty")}async deleteVectors(t,{wait:e=!0,ordering:n,points:a,filter:r,vector:s}){return o((await this._openApiClient.points.deleteVectors({collection_name:t,wait:e,ordering:n,points:a,filter:r,vector:s})).data.result).orThrow("Delete vectors returned empty")}async searchPointGroups(t,{consistency:e,vector:n,filter:a,params:r,with_payload:s=null,with_vector:i=null,score_threshold:c,group_by:l,group_size:p,limit:h}){return o((await this._openApiClient.points.searchPointGroups({collection_name:t,consistency:e,vector:n,filter:a,params:r,with_payload:s,with_vector:i,score_threshold:c,group_by:l,group_size:p,limit:h})).data.result).orThrow("Search point groups returned empty")}async recommendPointGroups(t,{consistency:e,positive:n,strategy:a,negative:r=[],filter:s,params:i,with_payload:c=null,with_vector:l=null,score_threshold:p,using:h=null,lookup_from:d=null,group_by:u,group_size:m,limit:_}){return o((await this._openApiClient.points.recommendPointGroups({collection_name:t,consistency:e,positive:n,negative:r,strategy:a,filter:s,params:i,with_payload:c,with_vector:l,score_threshold:p,using:h,lookup_from:d,group_by:u,group_size:m,limit:_})).data.result).orThrow("Recommend point groups API returned empty")}async upsert(t,{wait:e=!0,ordering:n,...a}){return o((await this._openApiClient.points.upsertPoints({collection_name:t,wait:e,ordering:n,...a})).data.result).orThrow("Upsert returned empty")}async retrieve(t,{ids:e,with_payload:n=!0,with_vector:a,consistency:r}){return o((await this._openApiClient.points.getPoints({collection_name:t,ids:e,with_payload:n,with_vector:a,consistency:r})).data.result).orThrow("Retrieve API returned empty")}async delete(t,{wait:e,ordering:n,...a}){return o((await this._openApiClient.points.deletePoints({collection_name:t,wait:e,ordering:n,...a})).data.result).orThrow("Delete points returned empty")}async setPayload(t,{payload:e,points:n,filter:a,ordering:r,wait:s=!0}){return o((await this._openApiClient.points.setPayload({collection_name:t,payload:e,points:n,filter:a,wait:s,ordering:r})).data.result).orThrow("Set payload returned empty")}async overwritePayload(t,{ordering:e,payload:n,points:a,filter:r,wait:s=!0}){return o((await this._openApiClient.points.overwritePayload({collection_name:t,payload:n,points:a,filter:r,wait:s,ordering:e})).data.result).orThrow("Overwrite payload returned empty")}async deletePayload(t,{ordering:e,keys:n,points:a,filter:r,wait:s=!0}){return o((await this._openApiClient.points.deletePayload({collection_name:t,keys:n,points:a,filter:r,wait:s,ordering:e})).data.result).orThrow("Delete payload returned empty")}async clearPayload(t,{ordering:e,wait:n=!0,...a}){return o((await this._openApiClient.points.clearPayload({collection_name:t,wait:n,ordering:e,...a})).data.result).orThrow("Clear payload returned empty")}async updateCollectionAliases({actions:t,timeout:e}){return o((await this._openApiClient.collections.updateAliases({actions:t,timeout:e})).data.result).orThrow("Update aliases returned empty")}async getCollectionAliases(t){return o((await this._openApiClient.collections.getCollectionAliases({collection_name:t})).data.result).orThrow("Get collection aliases returned empty")}async getAliases(){return o((await this._openApiClient.collections.getCollectionsAliases({})).data.result).orThrow("Get aliases returned empty")}async getCollections(){return o((await this._openApiClient.collections.getCollections({})).data.result).orThrow("Get collections returned empty")}async getCollection(t){return o((await this._openApiClient.collections.getCollection({collection_name:t})).data.result).orThrow("Get collection returned empty")}async updateCollection(t,e){return o((await this._openApiClient.collections.updateCollection({collection_name:t,...e})).data.result).orThrow("Update collection returned empty")}async deleteCollection(t,e){return o((await this._openApiClient.collections.deleteCollection({collection_name:t,...e})).data.result).orThrow("Delete collection returned empty")}async createCollection(t,{timeout:e,vectors:n,hnsw_config:a,init_from:r,on_disk_payload:s,optimizers_config:i,quantization_config:c,replication_factor:l,shard_number:p,wal_config:h,write_consistency_factor:d}){return o((await this._openApiClient.collections.createCollection({collection_name:t,timeout:e,vectors:n,hnsw_config:a,init_from:r,on_disk_payload:s,optimizers_config:i,quantization_config:c,replication_factor:l,shard_number:p,wal_config:h,write_consistency_factor:d})).data.result).orThrow("Create collection returned empty")}async recreateCollection(t,{timeout:e,vectors:n,hnsw_config:a,init_from:r,on_disk_payload:s,optimizers_config:i,quantization_config:c,replication_factor:l,shard_number:p,wal_config:h,write_consistency_factor:d}){o(await this._openApiClient.collections.deleteCollection({collection_name:t,timeout:e})).get("ok").orThrow("Delete collection returned failed");return o(await this._openApiClient.collections.createCollection({collection_name:t,timeout:e,vectors:n,hnsw_config:a,init_from:r,on_disk_payload:s,optimizers_config:i,quantization_config:c,replication_factor:l,shard_number:p,wal_config:h,write_consistency_factor:d})).orThrow("Create collection returned empty")}async createPayloadIndex(t,{wait:e,ordering:n,field_name:a,field_schema:r}){return o((await this._openApiClient.collections.createFieldIndex({collection_name:t,field_name:a,field_schema:r,wait:e,ordering:n})).data.result).orThrow("Create field index returned empty")}async deletePayloadIndex(t,e,{wait:n=!0,ordering:a}={}){return o((await this._openApiClient.collections.deleteFieldIndex({collection_name:t,field_name:e,wait:n,ordering:a})).data.result).orThrow("Delete field index returned empty")}async listSnapshots(t){return o((await this._openApiClient.snapshots.listSnapshots({collection_name:t})).data.result).orThrow("List snapshots API returned empty")}async createSnapshot(t,e){return o((await this._openApiClient.snapshots.createSnapshot({collection_name:t,...e})).data.result).orNull()}async deleteSnapshot(t,e,n){return o((await this._openApiClient.snapshots.deleteSnapshot({collection_name:t,snapshot_name:e,...n})).data.result).orThrow("Delete snapshot API returned empty")}async listFullSnapshots(){return o((await this._openApiClient.snapshots.listFullSnapshots({})).data.result).orThrow("List full snapshots API returned empty")}async createFullSnapshot(t){return o((await this._openApiClient.snapshots.createFullSnapshot(t??{})).data.result).orThrow("Create full snapshot API returned empty")}async deleteFullSnapshot(t,e){return o((await this._openApiClient.snapshots.deleteFullSnapshot({snapshot_name:t,...e})).data.result).orThrow("Delete full snapshot API returned empty")}async recoverSnapshot(t,{location:e,priority:n}){return o((await this._openApiClient.snapshots.recoverFromSnapshot({collection_name:t,location:e,priority:n})).data.result).orThrow("Recover from snapshot API returned empty")}async lockStorage(t){return o((await this._openApiClient.service.postLocks({write:!0,error_message:t})).data.result).orThrow("Lock storage returned empty")}async unlockStorage(){return o((await this._openApiClient.service.postLocks({write:!1})).data.result).orThrow("Post locks returned empty")}async getLocks(){return o((await this._openApiClient.service.getLocks({})).data.result).orThrow("Get locks returned empty")}async batchUpdate(t,{wait:e=!0,ordering:n,...a}){return o((await this._openApiClient.points.batchUpdate({collection_name:t,wait:e,ordering:n,...a})).data.result).orThrow("Batch update returned empty")}async recoverShardFromSnapshot(t,e,{wait:n=!0,...a}){return o((await this._openApiClient.snapshots.recoverShardFromSnapshot({collection_name:t,shard_id:e,wait:n,...a})).data.result).orThrow("Recover shard from snapshot returned empty")}async listShardSnapshots(t,e){return o((await this._openApiClient.snapshots.listShardSnapshots({collection_name:t,shard_id:e})).data.result).orThrow("List shard snapshots returned empty")}async createShardSnapshot(t,e,{wait:n=!0}){return o((await this._openApiClient.snapshots.createShardSnapshot({collection_name:t,shard_id:e,wait:n})).data.result).orThrow("Create shard snapshot returned empty")}async deleteShardSnapshot(t,e,n,{wait:a=!0}){return o((await this._openApiClient.snapshots.deleteShardSnapshot({collection_name:t,shard_id:e,snapshot_name:n,wait:a})).data.result).orThrow("Create shard snapshot returned empty")}}export{v as QdrantClient,f as QdrantClientConfigError,g as QdrantClientTimeoutError,y as QdrantClientUnexpectedResponseError};
